task: classification
remark: none

nohup: 0 #是否nohup运行
data_new: 0 # remember to change train_rate
model_name: gmfnet
#ct_lstm #resnet18 # dqtl#cross_net
#swin_transformer# vision_transformer#swin_T_dual
data_address: ../../Remote data/RSclass/PAN-MS/{{dc}}/ # 数据集所在位置
#data_address: /home/gpu/Experiment/Remote Data/{{dc}}/ # linux数据集所在位置
delete: 1

gpu_mode: False # 选择gpu
seed: 123
example_path: /path/to/{{parameter1}}
base_dir: '{{p2}}'
expo_result: ../Export_result/
parameters: '{{dc}}_tr{{tr}}_ep{{ep}}_bs{{bs}}'
RESULT: ../Export_result/{{dc}}_tr{{tr}}_ep{{ep}}_bs{{bs}}/
FILE_NUM: 0 # 176
index: 0
RESULT_excel: '{{RESULT}}/{{mn}}__{{FN}}_result.xlsx'
RESULT_output: '{{RESULT}}/{{mn}}__{{FN}}_output/'

data_city: image6 # 数据集城市
use_h5: False # 是否选用h5数据集作为输入
patch_size: 16 # 裁减的MS图片大小
Categories_Number: '{{num}}'
device: 'cuda:0'

CUDA_VISIBLE_DEVICES: "0" # 选择gpu
batchsize: 256 # 训练集batchsize
test_batchsize: 300 # 测试集batchsize
color_batchsize: 300 # 上色集batchsize
train_rate: 0.05 # 训练数据的比例
verify_rate: 0.05 # 验证数据的比例
epoch: 50 # 训练迭代数量
time: 5 # 实验重复次数

schedule:
  loss:  Criterion # Criterion # qua_loss # KL
  optimizer: ADAM # 优化函数
  if_scheduler: 0
  scheduler:  ExponentialLR
  activate: Relu # Gelu
  # StepLR # LinearLR # CosineAnnealingLR # CyclicLR # OneCycleLR
  # ConstantLR # ChainedScheduler # ExponentialLR
  lr: 1e-3 # 学习率
  base_lr: 5e-4 # 最低学习率

train:
  index: 1 # 是否进行训练
  pretrained: 0 # 是否使用预训练模型
  # save_model: True # 是否保存模型
  save_best: True # 是否保存最佳权重

test:
  index: 1 # 是否进行测试
  save_matrix: 1 # 是否保存混淆矩阵

color:
  index: 0 # 是够进行上色
  supervised: 1 # 是否上色有监督图像部分
  unsupervised: 1 # 是否上色无监督图像部分

trans:
  patch_size: 1
  window_size: 2
  embed_dim: 96
  depth: 2
  num_head: 3
  depths: [2, 4]
  num_heads: [3, 3]

DATA_DICT: # 数据集字典
  image4:
    size: [800, 830, 4]
    color: [[0, 0, 0], [255, 192, 203], [255, 165, 0], [0, 255, 255],
    [255, 0, 0], [160, 80, 43], [123, 255, 0], [0, 0, 255]]
  image5:
    size: [4541, 4548, 4]
    color: [[0, 0, 0], [0, 255, 255], [0, 0, 255], [0, 255, 127], [237, 145, 33],
    [189, 252, 201], [255, 0, 0], [139, 58, 58], [160, 32, 240],
    [221, 160, 221], [240, 230, 140], [255, 0, 255], [255, 255, 0]]
  image6:
    size: [2001, 2101, 4]
    color: [[0, 0, 0], [0, 255, 255], [0, 0, 255], [237, 145, 33],
    [0, 255, 0], [160, 32, 240], [221, 160, 221], [240, 230, 140],
    [255, 0, 0], [255, 255, 0], [0, 255, 127], [255, 0, 255]]
  image7:
    size: [2000, 2500, 4]
    color: [[0, 0, 0], [0, 255, 255], [0, 0, 255], [237, 145, 33],
    [0, 255, 0], [240, 230, 140], [255, 0, 0], [160, 32, 240],
    [255, 255, 0], [221, 160, 221], [0, 255, 127], [255, 0, 255]]
  image8:
    size: [3408, 4000, 4]
    color: [[0, 0, 0], [0, 255, 255], [0, 0, 255], [0, 255, 0], [255, 0, 0],
    [221, 160, 221], [240, 230, 140], [237, 145, 33], [0, 128, 0]]
  image9:
    size: [6905, 7300, 4]
    color: [[0, 0, 0], [0, 255, 255], [0, 0, 255], [237, 145, 33], [189, 252, 201],
    [230, 0, 0], [0, 255, 0], [160, 32, 240], [221, 160, 221],
    [240, 230, 140], [255, 255, 0]]
  image10:
    size: [6905, 7300, 4]
    color: [[0, 0, 0], [0, 255, 255], [0, 0, 255], [237, 145, 33], [189, 252, 201],
    [230, 0, 0], [0, 255, 0], [160, 32, 240], [221, 160, 221],
    [240, 230, 140], [255, 255, 0]]

Run: nohup F:/Anaconda/envs/C-CNN/pythonw.exe h:/Code/Dual-modal-fusion/test.py
